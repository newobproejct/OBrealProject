<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그의 namespace 속성 필수 작성 -->
<mapper namespace="Room">

	<!-- ****** 게시판 공동 ************************************************* -->
	<!-- 게시판별 전체 게시물 조회 -->
	<select id="getList" resultType="com.ob.vo.BoardplusVO"
		parameterType="String">
		SELECT * FROM OBHOTEL_BOARD WHERE BOARD_TYPE =
		#{board_type} ORDER BY ID DESC
	</select>

	<!-- 게시판별 총 게시물 건수 조회 -->
	<select id="totalCount" resultType="int" parameterType="String">
		SELECT
		COUNT(*) FROM OBHOTEL_BOARD WHERE BOARD_TYPE = #{board_type}
	</select>

	<!-- 게시판 페이지별 목록 조회 -->
	<select id="getPageList" resultType="com.ob.vo.BoardplusVO"
		parameterType="Map">
		SELECT *
		FROM (SELECT ROWNUM R_NUM, B_LIST.*
		FROM (SELECT
		*
		FROM OBHOTEL_BOARD
		WHERE BOARD_TYPE = #{board_type} ORDER BY ID DESC
		)
		B_LIST
		)
		WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- ****** 프리미엄 게시판용 ************************************************* -->
	<!-- 프리미엄 게시판 페이지별 목록 조회 -->
	<select id="getPremPageList" resultType="com.ob.vo.BoardplusVO"
		parameterType="Map">
		SELECT *
		  FROM (SELECT ROWNUM R_NUM, BR.*, U.ACCOUNT, U.NICKNAME
		          FROM (SELECT B.*, R.ID RID, R.ROOM_ID, R.S_DATE, R.E_DATE, R.R_DATE, R.PAX, R.REVIEW_ID
		                  FROM (SELECT ID, USER_ID, BOARD_TYPE, TITLE, CONTENT, SUBSTR(WRITE_DATE,1,10) WRITE_DATE, READ_COUNT
		                          FROM OBHOTEL_BOARD) B,
		                       (SELECT ID, USER_ID, ROOM_ID, SUBSTR(S_DATE,1,10) S_DATE, SUBSTR(E_DATE,1,10) E_DATE, R_DATE, PAX, REVIEW_ID
		                          FROM OBHOTEL_RESERVATION) R
		                 WHERE R.REVIEW_ID = B.ID ORDER BY B.ID DESC) BR,
		               (SELECT ID, ACCOUNT, NICKNAME
		                  FROM OBHOTEL_USER) U
		         WHERE U.ID = BR.USER_ID)
		 WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 프리미엄 게시글 상세조회 -->
	<select id="getPremOne" resultType="com.ob.vo.BoardplusVO"
		parameterType="String">
		SELECT *
		  FROM (SELECT ROWNUM R_NUM, BR.*, U.ACCOUNT, U.NICKNAME
		          FROM (SELECT B.*, R.ID RID, R.ROOM_ID, R.S_DATE, R.E_DATE, R.R_DATE, R.PAX, R.REVIEW_ID
		                  FROM (SELECT ID, USER_ID, BOARD_TYPE, TITLE, CONTENT, SUBSTR(WRITE_DATE,1,10) WRITE_DATE, READ_COUNT
		                          FROM OBHOTEL_BOARD) B,
		                       (SELECT ID, USER_ID, ROOM_ID, SUBSTR(S_DATE,1,10) S_DATE, SUBSTR(E_DATE,1,10) E_DATE, R_DATE, PAX, REVIEW_ID
		                          FROM OBHOTEL_RESERVATION) R
		                 WHERE R.REVIEW_ID = B.ID ORDER BY B.ID DESC) BR,
		               (SELECT ID, ACCOUNT, NICKNAME
		                  FROM OBHOTEL_USER) U
		         WHERE U.ID = BR.USER_ID)
		 WHERE ID=#{pId}
	</select>
	
	<!-- 프리미엄 게시글 방 정보 상세 조회(파라미터:review_id) -->
	<select id="getPremRoomDetail" resultType="Map" parameterType="String">
		SELECT *   
		FROM (SELECT RD.*, RES.USER_ID, SUBSTR(S_DATE,1,10) S_DATE, SUBSTR(E_DATE,1,10) E_DATE, SUBSTR(R_DATE,1,10) R_DATE, RES.PAX, RES.REVIEW_ID
		        FROM (SELECT R.*, RT.ROOM_TYPE, RT.MAX_PAX, RT.COST
		                FROM OBHOTEL_ROOM R, OBHOTEL_ROOM_TYPE RT
		               WHERE R.ROOM_TYPE_ID=RT.ID
		               ORDER BY R.ID) RD,
		             OBHOTEL_RESERVATION RES
		       WHERE RD.ID = RES.ROOM_ID)
		WHERE REVIEW_ID = #{review_id}		
	</select>
	
	<!-- 사용완료된 예약내역 상세조회 -->
	<select id="getUsedResDetail" resultType="com.ob.vo.ReservationVO" parameterType="com.ob.vo.UserVO">
		 SELECT RES.ID ID, SUBSTR(S_DATE,1,10) S_DATE, SUBSTR(E_DATE,1,10) E_DATE
		 	   , U.ID USER_ID, ACCOUNT, NICKNAME
		       ,R.ID ROOM_ID, ROOM_NAME, R.ROOM_TYPE_ID ROOM_TYPE_ID
		       ,ROOM_TYPE, R.ROOM_NUM ROOM_NUM, ROOM_CONTENT
		       ,R.ROOM_ADDRESS1 ROOM_ADDRESS1, R.ROOM_ADDRESS2 ROOM_ADDRESS2, R.ROOM_THEME ROOM_THEME
		       ,RES.PAX PAX, RT.MAX_PAX MAX_PAX, COST, REVIEW_ID
		   FROM OBHOTEL_RESERVATION RES,
		        OBHOTEL_USER U,
		        OBHOTEL_ROOM R,
		        OBHOTEL_ROOM_TYPE RT
		  WHERE USER_ID = #{id}
		    AND RES.USER_ID = U.ID
		    AND RES.ROOM_ID = R.ID
		    AND R.ROOM_TYPE_ID = RT.ID
		    AND RES.E_DATE &lt; SYSDATE
	</select>
	
	<!-- ****** 로그인 아이디체크 ******************************************** -->
	<!-- *** idcheck ********* -->
	<select id="checkId" resultType="com.ob.vo.UserVO"
		parameterType="String">
		SELECT *
		FROM OBHOTEL_USER
		WHERE ACCOUNT = #{account}
	</select>

	<!--*** checkJoin ********* -->
	<insert id="checkJoin" parameterType="com.ob.vo.UserVO">
		INSERT INTO OBHOTEL_USER
		(ID, ACCOUNT, PASSWORD, NICKNAME, BIRTHDAY,ZIPCODE , ADDRESS1,
		ADDRESS2, EMAIL,E_CONFIRM,TEL)
		VALUES (OBHOTEL_USER_SEQ.NEXTVAL,
		#{account}, #{password},
		#{nickname}, #{birthday},#{zipcode}
		,#{address1}, #{address2},
		#{email},#{e_confirm}, #{tel})
	</insert>

	<!-- 로그인 후 해당 유저 예약 기록 조회 -->
	<select id="getUserReservation" parameterType="String"
		resultType="com.ob.vo.ReservationVO">
		SELECT * FROM OBHOTEL_RESERVATION WHERE USER_ID=#{id}
	</select>

	<!-- 회원 정보 변경 -->
	<update id="mypageUP" parameterType="com.ob.vo.UserVO">
		UPDATE OBHOTEL_USER 
		   SET ACCOUNT = #{account}, PASSWORD = #{password},
		   	   NICKNAME = #{nickname}, BIRTHDAY = #{birthday},
		   	   ZIPCODE = #{zipcode}, ADDRESS1 = #{address1},
		   	   ADDRESS2 = #{address2}, EMAIL = #{email},
		   	   E_CONFIRM = #{e_confirm}, TEL = #{tel}
		 WHERE ID = #{id}
	</update>
	
	<!-- 중복 아이디 조회 -->
	<select id="dupIdChk" resultType="com.ob.vo.UserVO" parameterType="String">
		SELECT ACCOUNT FROM OBHOTEL_USER WHERE ACCOUNT = #{account}
	</select>
	
	<!-- ****** 공지사항 ************************************************** -->
	<select id="noticeTotalCount" resultType="int">
		SELECT COUNT(ID) FROM
		OBHOTEL_BOARD
	</select>

	<select id="noticeList" resultType="com.ob.vo.BoardplusVO"
		parameterType="map">
		SELECT *
		FROM (SELECT ROWNUM R_NUM, B.*
		FROM (SELECT *
		FROM OBHOTEL_BOARD
		WHERE BOARD_TYPE = #{board_type}
		ORDER BY ID DESC
		) B
		)
		WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>

	<insert id="noticeInsert" parameterType="com.ob.vo.BoardplusVO">
		INSERT INTO
		OBHOTEL_BOARD
		(ID, USER_ID, BOARD_TYPE, TITLE, CONTENT, WRITE_DATE,
		READ_COUNT)
		VALUES
		(OBHOTEL_BOARD_SEQ.NEXTVAL, #{user_id},
		#{board_type}, #{title},
		#{content}, SYSDATE, 0)
	</insert>

	<select id="noticeOne" resultType="com.ob.vo.BoardplusVO">
		SELECT * FROM OBHOTEL_BOARD
		WHERE ID = #{id}
	</select>

	<delete id="noticeDel" parameterType="String">
		DELETE FROM OBHOTEL_BOARD
		WHERE ID = #{id}
	</delete>

	<update id="noticeUp" parameterType="com.ob.vo.BoardplusVO">
		UPDATE OBHOTEL_BOARD SET
		USER_ID = #{user_id}, BOARD_TYPE = #{board_type},
		TITLE = #{title},
		CONTENT = #{content}, WRITE_DATE = SYSDATE,
		READ_COUNT = 0
		WHERE ID =
		#{id}
	</update>

	<!-- ********문의사항 게시판********* -->

	<!-- 게시문 보기 셀렉문 -->
	<select id="queSelOne" resultType="com.ob.vo.BoardplusVO">
		SELECT * FROM OBHOTEL_BOARD
		WHERE ID = #{id}
	</select>


	<select id="queList" resultType="com.ob.vo.BoardplusVO"
		parameterType="map">
		SELECT *
		FROM (SELECT ROWNUM R_NUM, B.*
		FROM (SELECT B.ID,
		B.TITLE, U.NICKNAME, B.WRITE_DATE, B.READ_COUNT
		FROM OBHOTEL_BOARD B,
		OBHOTEL_USER U
		WHERE B.USER_ID = U.ID
		ORDER BY b.ID DESC
		) B
		)
		WHERE R_NUM
		BETWEEN #{begin} AND #{end}
	</select>


	<!-- ******이벤트 게시판 ******** -->

	<!-- 두테이블 아웃 조인 로우럼 셀렉문 -->
	<select id="getEventALLcol" resultType="com.ob.vo.BoardplusVO"
		parameterType="Map">
		select* FROM (select ROWNUM R_NUM, H.* FROM
		(SELECT b.id,
		user_id, board_type, title, content, write_date, read_count,
		board_id,
		filename,
		saved_filename,
		filesize
		FROM obhotel_board b LEFT OUTER JOIN
		obhotel_board_file f ON b.id =
		f.board_id WHERE board_type =
		#{board_type} order by id desc)H)WHERE R_NUM BETWEEN
		#{begin} AND
		#{end}
	</select>

	<select id="getUserBoardTotalList" parameterType="String"
		resultType="com.ob.vo.BoardplusVO">
		SELECT b.id,user_id, board_type, title, content,
		write_date, read_count,
		board_id, filename,
		saved_filename, filesize
		FROM obhotel_board b LEFT
		OUTER JOIN
		obhotel_board_file f ON b.id = f.id
		where user_id =#{id}
	</select>

	<!-- **파일 삽입* -->
	<insert id="file_insert" parameterType="com.ob.vo.BoardplusVO">
		INSERT INTO
		OBHOTEL_BOARD_file
		(ID, BOARD_ID, FILENAME, SAVED_FILENAME, FILESIZE )
		VALUES (OBHOTEL_BOARD_FILE_SEQ.NEXTVAL, #{board_id}, #{filename},
		#{saved_filename}, 248000)
	</insert>

	<select id="getDeatil" resultType="com.ob.vo.BoardplusVO">
		select* FROM (select H.* FROM
		(SELECT b.id,
		user_id, board_type, title,
		content, write_date,
		read_count,
		board_id,
		filename,
		saved_filename,
		filesize
		FROM obhotel_board
		b LEFT OUTER JOIN
		obhotel_board_file f ON
		b.id = f.board_id WHERE b.id =
		#{b_id} order by id desc)H)

	</select>

	<select id="getsi" resultType="String">
		SELECT DISTINCT ROOM_ADDRESS1
		FROM
		OBHOTEL_ROOM

	</select>
	<select id="getgu" resultType="String">
		SELECT DISTINCT ROOM_ADDRESS2
		FROM
		OBHOTEL_ROOM

	</select>

	<select id="getgu2" resultType="String">
		select DISTINCT room_address2
		from OBHOTEL_ROOM where room_address1= #{name}

	</select>

	<select id="siguCount" resultType="int" parameterType="map">
		select
		count(*) from obhotel_room r ,obhotel_room_file f , obhotel_room_type
		t
		where r.room_type_id = t.id and f.room_type_id = t.id and
		room_address1 like '%'||#{chk_si}||'%' and room_address2 like '%'||#{chk_gu}||'%'
	</select>

	<select id="get_room" resultType="com.ob.vo.RoomTABLEVO"
		parameterType="map">
		select *
		  from (select rownum r_num,r.id room_id, r.room_type_id
		              ,room_name,room_num,room_content ,room_address1,room_address2
		              ,room_theme,filename,room_type,max_pax,cost
		          from obhotel_room r
		              ,obhotel_room_file f
		              ,obhotel_room_type t
		         where r.room_type_id = t.id
		           and f.room_type_id = t.id
		           and room_address1 like '%'||#{chk_si}||'%'
		           and room_address2 like '%'||#{chk_gu}||'%')
		 where r_num between #{begin} and #{end}
	</select>

	<select id="gettheme" resultType="String">
		SELECT DISTINCT ROOM_THEME
		FROM
		OBHOTEL_ROOM

	</select>

	<select id="themeCount" resultType="int" parameterType="String">
		select
		count(*) from obhotel_room r ,obhotel_room_file f , obhotel_room_type
		t
		where r.room_type_id = t.id and f.room_type_id = t.id and
		room_theme = #{chk_theme}
	</select>

	<select id="get_Roomtheme" resultType="com.ob.vo.RoomTABLEVO"
		parameterType="map">
		select * from (select ROWNUM R_NUM,r.id room_id, r.room_type_id
		,room_name,room_num,room_content ,room_address1,room_address2,
		room_theme,
		filename,room_type,max_pax,cost from obhotel_room r
		,obhotel_room_file
		f , obhotel_room_type t
		where r.room_type_id = t.id
		and f.room_type_id
		= t.id and room_theme = #{chk_theme})
		where r_num
		between #{begin} and #{end}
	</select>
	
	
	<select id="get_Address" resultType="com.ob.vo.Si_GuVO"
		parameterType="map">
		select distinct room_address1, room_address2 from obhotel_room order by room_address1
	</select>

	<!-- (예약용) room_id로 reservation 조회 -->
	<select id="getResByRid" resultType="com.ob.vo.ReservationVO"
		parameterType="String">
		SELECT *
		  FROM OBHOTEL_RESERVATION
		 WHERE ROOM_ID = #{room_id}
		   AND SYSDATE &lt; S_DATE
	</select>
	
	<!-- (예약용) room_id로 방 전체정보 조회 -->
	<select id="getRoomTableByRid" resultType="com.ob.vo.RoomTABLEVO"
		parameterType="String">
		SELECT ROWNUM R_NUM, R.ID, R.ROOM_TYPE_ID
		      ,ROOM_NAME,ROOM_NUM,ROOM_CONTENT ,ROOM_ADDRESS1,ROOM_ADDRESS2
		      ,ROOM_THEME,F.ID FILE_ID, FILENAME,ROOM_TYPE, T.ID TYPE_ID, MAX_PAX,COST
		  FROM OBHOTEL_ROOM R
		      ,OBHOTEL_ROOM_FILE F
		      ,OBHOTEL_ROOM_TYPE T
		 WHERE R.ID = {room_id}
		   AND R.ROOM_TYPE_ID = T.ID
		   AND R.ROOM_TYPE_ID = F.ROOM_TYPE_ID
	</select>

</mapper>
